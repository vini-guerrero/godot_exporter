name: Export Android and iOS
on:
  workflow_dispatch:
  workflow_run:
    workflows: [ "Build Android" ]
    types: 
      - completed
  push:
    # paths: 
    #   - '.github/workflows/godot_export_android_ios_project.yml'
    #   - './../*'
    branches: [ master ]
    tags:
      - 'v*' 
env:
  GITHUB_RELEASE: false
  EXPORTER_PATH: godot_exporter
  # DEBUG_KEYSTORE_PATH: "https://github.com/vini-guerrero/godot_exporter/blob/master/keystores/debug.keystore?raw=true"
  # RELEASE_KEYSTORE_PATH: "https://github.com/vini-guerrero/godot_exporter/blob/master/keystores/mygame.keystore?raw=true"
jobs:
  export:
    name: Export and Upload Game
    runs-on: ubuntu-latest
    strategy:
      matrix:
        GODOT_VERSIONS: [3.2.3]
        EXPORT_VERSION: [true, false]
    steps:    
    - uses: actions/checkout@v2
    
    - name: Setup ADB & Keystore
      # run: |
      #   wget -O debug.keystore ${{ env.DEBUG_KEYSTORE_PATH }}
      #   wget -O release.keystore ${{ env.RELEASE_KEYSTORE_PATH }}
      #   sudo chmod 777 -R /usr/bin
      #   mv debug.keystore /usr/bin
      #   mv release.keystore /usr/bin
      #   mv /usr/local/lib/android/sdk/platform-tools/adb /usr/bin
      
      run: |
        sudo chmod 777 -R /usr/bin        
        mv /usr/local/lib/android/sdk/platform-tools/adb /usr/bin
    
    - name: Get Github Version Tag
      id: tag_version
      run: |
        echo ::set-output name=TAG_VERSION::${GITHUB_REF#refs/tags/v}   
          
    - name: Setup Godot Environment and Project
      uses: vini-guerrero/godot-export@master
      with:
        godot_executable_download_url: https://downloads.tuxfamily.org/godotengine/${{matrix.GODOT_VERSIONS}}/Godot_v${{matrix.GODOT_VERSIONS}}-stable_linux_headless.64.zip
        godot_export_templates_download_url: https://downloads.tuxfamily.org/godotengine/${{matrix.GODOT_VERSIONS}}/Godot_v${{matrix.GODOT_VERSIONS}}-stable_export_templates.tpz
        relative_project_path: ./
        use_preset_export_path: true
        create_release: ${{ env.GITHUB_RELEASE }}
        export_debug: ${{ matrix.EXPORT_VERSION }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: iOS Release Build
      uses: actions/upload-artifact@v2
      if: matrix.EXPORT_VERSION == true
      with:
        name: iOS-Release
        path: /home/runner/work/${{ env.EXPORTER_PATH }}/builds/ios/iOS/

    - name: Android Release Build
      uses: actions/upload-artifact@v2
      if: matrix.EXPORT_VERSION == true
      with:
        name: Android-Release
        path: /home/runner/work/${{ env.EXPORTER_PATH }}/builds/android/Android/
    
    - name: iOS Debug Build
      uses: actions/upload-artifact@v2
      if: matrix.EXPORT_VERSION == false
      with:
        name: iOS-Debug
        path: /home/runner/work/${{ env.EXPORTER_PATH }}/builds/ios/iOS/

    - name: Android Debug Build
      uses: actions/upload-artifact@v2
      if: matrix.EXPORT_VERSION == false
      with:
        name: Android-Debug
        path: /home/runner/work/${{ env.EXPORTER_PATH }}/builds/android/Android/
    
    - name: Create Github Release
      id: create_github_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        tag_name: ${{ steps.tag_version.outputs.TAG_VERSION }}
        release_name: Release ${{ steps.tag_version.outputs.TAG_VERSION }}
        body: |
          Godot Export Android & iOS Project
          - Automated Build
        draft: false
        prerelease: false  

    - name: Upload Release
      id: upload_github_release
      uses: actions/upload-release-asset@v1
      if: matrix.EXPORT_VERSION == false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_github_release.outputs.upload_url }}
        asset_path: ./home/runner/work/${{ env.EXPORTER_PATH }}/builds/android/Android/Android-Debug
        asset_name: Android-Debug.zip
        asset_content_type: application/zip